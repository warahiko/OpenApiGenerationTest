/**
* OpenAPI Generator test with Qiita API
* Qiita API を用いたOpenAPI Generator のテストです。
*
* The version of the OpenAPI document: 0.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.example.openapigenerationtestapi.sp.model

import com.example.openapigenerationtestapi.sp.model.Group
import com.example.openapigenerationtestapi.sp.model.Tag
import com.example.openapigenerationtestapi.sp.model.User

import com.squareup.moshi.Json
/**
 * ユーザからの投稿を表します。
 * @param renderedBody HTML形式の本文
 * @param body Markdown形式の本文
 * @param coediting この記事が共同更新状態かどうか (Qiita Teamでのみ有効)
 * @param commentsCount この記事へのコメントの数
 * @param createdAt データが作成された日時
 * @param group 
 * @param id 記事の一意なID
 * @param likesCount この記事への「LGTM！」の数（Qiitaでのみ有効）
 * @param private 限定共有状態かどうかを表すフラグ (Qiita Teamでは無効)
 * @param reactionsCount 絵文字リアクションの数（Qiita Teamでのみ有効）
 * @param tags 記事に付いたタグ一覧
 * @param title 記事のタイトル
 * @param updatedAt データが最後に更新された日時
 * @param url 記事のURL
 * @param user 
 * @param pageViewsCount 閲覧数
 */

data class Item (
    /* HTML形式の本文 */
    @Json(name = "rendered_body")
    val renderedBody: kotlin.String? = null,
    /* Markdown形式の本文 */
    @Json(name = "body")
    val body: kotlin.String? = null,
    /* この記事が共同更新状態かどうか (Qiita Teamでのみ有効) */
    @Json(name = "coediting")
    val coediting: kotlin.Boolean? = null,
    /* この記事へのコメントの数 */
    @Json(name = "comments_count")
    val commentsCount: kotlin.Int? = null,
    /* データが作成された日時 */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime? = null,
    @Json(name = "group")
    val group: Group? = null,
    /* 記事の一意なID */
    @Json(name = "id")
    val id: kotlin.String? = null,
    /* この記事への「LGTM！」の数（Qiitaでのみ有効） */
    @Json(name = "likes_count")
    val likesCount: kotlin.Int? = null,
    /* 限定共有状態かどうかを表すフラグ (Qiita Teamでは無効) */
    @Json(name = "private")
    val private: kotlin.Boolean? = null,
    /* 絵文字リアクションの数（Qiita Teamでのみ有効） */
    @Json(name = "reactions_count")
    val reactionsCount: kotlin.Int? = null,
    /* 記事に付いたタグ一覧 */
    @Json(name = "tags")
    val tags: kotlin.Array<Tag>? = null,
    /* 記事のタイトル */
    @Json(name = "title")
    val title: kotlin.String? = null,
    /* データが最後に更新された日時 */
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime? = null,
    /* 記事のURL */
    @Json(name = "url")
    val url: kotlin.String? = null,
    @Json(name = "user")
    val user: User? = null,
    /* 閲覧数 */
    @Json(name = "page_views_count")
    val pageViewsCount: kotlin.Int? = null
)

